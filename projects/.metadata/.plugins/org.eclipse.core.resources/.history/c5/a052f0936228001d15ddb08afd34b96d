package namoo.yorizori.dao.cookbook;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.sql.DataSource;

import namoo.yorizori.dto.cookbook.Cookbook;
import namoo.yorizori.dto.cookbook.Recipe;
import namoo.yorizori.service.cookbook.CookbookService;

public class JdbcCookbookDao implements CookbookDao{
	private DataSource dataSource;

	public JdbcCookbookDao(DataSource dataSource) {
		this.dataSource = dataSource;
	}
	@Override
	public void create(Cookbook cookbook) throws SQLException{
		Connection con = null;
		PreparedStatement pstmt = null;
		
		StringBuffer sb = new StringBuffer();
		sb.append(" INSERT INTO cookbook(book_id, book_name, book_desc, author_id)")
          .append(" VALUES (cookbook_seq.nextval, ?, ?, ?)");
		try {
			con = dataSource.getConnection();
			pstmt = con.prepareStatement(sb.toString());
//			pstmt.setInt(1, cookbook.getBook_id());
			pstmt.setString(1, cookbook.getBook_name());
			pstmt.setString(2, cookbook.getBook_desc());
			pstmt.setString(3, cookbook.getAuthor_id());
			pstmt.executeUpdate();
		}finally {
	
			if(pstmt != null) 
				pstmt.close();
			if(con != null)
				con.close();
		}
		
	}
	@Override
	public Cookbook findCookbookById(int bookid) {
		
		
		return null;
	}
	@Override
	public List<Cookbook> findCookbookByAll() {
		List<Cookbook> cbList = null;
		Connection con = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		StringBuffer sb = new StringBuffer();
		sb.append(" SELECT book_id, book_name, book_desc, author_id ")
		  .append(" FROM cookbook ");
		
		try {
			con = dataSource.getConnection();
			pstmt = con.prepareStatement(sb.toString());
			rs = pstmt.executeQuery();
			cbList = new ArrayList<Cookbook>();
			
			while (rs.next()) {
				Cookbook cookbook = new Cookbook();
				cookbook.setBook_id(rs.getInt("book_id"));
				cookbook.setBook_name(rs.getString("book_name"));
				cookbook.setBook_desc(rs.getString("book_desc"));
				cookbook.setAuthor_id(rs.getString("author_id"));
				cbList.add(cookbook);
				
			}
		} catch (SQLException e) {
			
		}
		return cbList;
	}
	@Override
	public void registerRecipe(Recipe recipe) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public Recipe findRecipeById(int recipeid) {
		// TODO Auto-generated method stub
		return null;
	}
	@Override
	public List<Recipe> findRecipeByAll() {
		// TODO Auto-generated method stub
		return null;
	}
	
}
