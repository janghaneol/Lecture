/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-08-18 12:40:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import namoo.common.factory.JdbcDaoFactory;
import namoo.user.dto.User;

public final class userList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("namoo.user.dto.User");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("namoo.common.factory.JdbcDaoFactory");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

HttpSession loginSession = request.getSession();
User loginUser = (User) loginSession.getAttribute("loginUser");
if (loginUser == null) {

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<script>\r\n");
      out.write("	alert(\"회원목록은 로그인 사용자만 사용 가능합니다.\");\r\n");
      out.write("</script>\r\n");
      out.write("</html>\r\n");

} else {
  List<User> list = JdbcDaoFactory.getInstance().getUserDao().list();

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/basic.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/pagination.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("  <!-- header start -->\r\n");
      out.write("  ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/include/header.jsp", out, false);
      out.write("\r\n");
      out.write("  <!-- header end -->\r\n");
      out.write("\r\n");
      out.write("  <!-- main body start -->\r\n");
      out.write("  <div class=\"row\">\r\n");
      out.write("    <div class=\"leftcolumn\">\r\n");
      out.write("      <div class=\"w3-container\">\r\n");
      out.write("        <div class=\"w3-center\">\r\n");
      out.write("          <h3>\r\n");
      out.write("            회원 목록(총\r\n");
      out.write("            ");
      out.print(list.size());
      out.write("명)\r\n");
      out.write("          </h3>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!-- 검색폼 -->\r\n");
      out.write("        <div class=\"search\">\r\n");
      out.write("          <form>\r\n");
      out.write("            <select name=\"searchType\">\r\n");
      out.write("              <option value=\"all\">전체</option>\r\n");
      out.write("              <option value=\"id\">아이디</option>\r\n");
      out.write("              <option value=\"name\">이름</option>\r\n");
      out.write("            </select> <input type=\"text\" name=\"searchValue\"\r\n");
      out.write("              placeholder=\"Search..\"> <input type=\"submit\"\r\n");
      out.write("              value=\"검색\">\r\n");
      out.write("          </form>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"w3-responsive w3-card-4\">\r\n");
      out.write("          <table class=\"w3-table w3-striped w3-bordered\">\r\n");
      out.write("            <thead>\r\n");
      out.write("              <tr class=\"w3-theme\">\r\n");
      out.write("                <th>번호</th>\r\n");
      out.write("                <th>아이디</th>\r\n");
      out.write("                <th>이름</th>\r\n");
      out.write("                <th>이메일</th>\r\n");
      out.write("                <th>가입일자</th>\r\n");
      out.write("              </tr>\r\n");
      out.write("            </thead>\r\n");
      out.write("\r\n");
      out.write("            <tbody>\r\n");
      out.write("              ");

              for (int i = 0; i < list.size(); i++) {
              	User user = list.get(i);
              
      out.write("\r\n");
      out.write("              <tr class=\"w3-white\">\r\n");
      out.write("                <td>");
      out.print(i + 1);
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print(user.getId());
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print(user.getName());
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print(user.getEmail());
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print(user.getRegdate());
      out.write("</td>\r\n");
      out.write("              </tr>\r\n");
      out.write("              ");

              }
              
      out.write("\r\n");
      out.write("            </tbody>\r\n");
      out.write("\r\n");
      out.write("          </table>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"pagination\">\r\n");
      out.write("        <a href=\"#\">&laquo;</a> <a href=\"#\">1</a> <a class=\"active\"\r\n");
      out.write("          href=\"#\">2</a> <a href=\"#\">3</a> <a href=\"#\">4</a> <a href=\"#\">5</a>\r\n");
      out.write("        <a href=\"#\">6</a> <a href=\"#\">7</a> <a href=\"#\">8</a> <a\r\n");
      out.write("          href=\"#\">9</a> <a href=\"#\">10</a> <a href=\"#\">&raquo;</a>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- aside start -->\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/include/aside.jsp", out, false);
      out.write("\r\n");
      out.write("    <!-- aside end -->\r\n");
      out.write("  </div>\r\n");
      out.write("  <!-- main body end -->\r\n");
      out.write("\r\n");
      out.write("  <!-- footer start -->\r\n");
      out.write("  ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/include/footer.jsp", out, false);
      out.write("\r\n");
      out.write("  <!-- footer end -->\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");

}

      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
